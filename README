--Docs
https://docs.openzeppelin.com/contracts/4.x/
https://docs.openzeppelin.com/learn/deploying-and-interacting
https://viblo.asia/p/lam-the-nao-de-upgrade-mot-smart-contract-tren-ethereum-phan-1-07LKXe3PZV4
https://viblo.asia/p/lam-the-nao-de-upgrade-mot-smart-contract-tren-ethereum-phan-2-phan-cuoi-vyDZOqJG5wj
https://viblo.asia/p/lam-the-nao-de-mot-smart-contract-co-the-nhan-nft-non-fungible-token-E375z6LW5GW
https://viblo.asia/p/tim-hieu-ve-flash-loan-tren-aave-Do754244ZM6
https://docs.aave.com/developers/core-contracts/pool#flashloan
https://eips.ethereum.org/EIPS/eip-1155
https://bscscan.com/address/0xf6bcb7f4ca6aa1b9c13214f4901255ec93851060#code
// -- Create project
// npm init -y
// npx truffle init
// npm install --save-dev hardhat
// npx hardhat compile
// npm install @openzeppelin/contracts
// npx hardhat node
// npm install --save-dev @nomiclabs/hardhat-ethers ethers

// // hardhat.config.js
// require('@nomiclabs/hardhat-ethers');

// it("Should revert with the right error if called from another account", async function () {
//   // ...deploy the contract...

//   const [owner, otherAccount] = await ethers.getSigners();

//   // we increase the time of the chain to pass the first check
//   await time.increaseTo(unlockTime);

//   // We use lock.connect() to send a transaction from another account
//   await expect(lock.connect(otherAccount).withdraw()).to.be.revertedWith(
//     "You aren't the owner"
//   );
// });
//await network.provider.send("evm_setNextBlockTimestamp", [1625097600])